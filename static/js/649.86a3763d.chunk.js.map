{"version":3,"file":"static/js/649.86a3763d.chunk.js","mappings":"sMAQe,SAASA,EAAcC,GACpC,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,GAAQ,mCACpBC,GAAMC,EAAAA,EAAAA,WACLC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CAAEC,EAAG,EAAGC,EAAG,IACxDC,GAAUC,EAAAA,EAAAA,GAAe,CAC7B,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC1F,CAACC,KAAK,MAEFC,EAASb,EAAMc,cACfC,EAAkBf,EAAMe,gBAmD9B,OA/CAC,EAAAA,EAAAA,kBAAgB,KACd,SAASC,EAAgBC,GACvB,MAAM,QAAEC,EAAO,QAAEC,GAAYF,EAC7BZ,EAAiB,CAAEE,EAAGW,EAASV,EAAGW,GACpC,CAIA,OAFAC,SAASC,iBAAiB,YAAaL,GAEhC,KACLI,SAASE,oBAAoB,YAAaN,EAAgB,CAC3D,GACA,KAEHO,EAAAA,EAAAA,IAASC,IAAmB,IAAlB,SAAEC,GAAUD,EACpB,GAAGZ,GAA8B,IAApBE,EACX,IAAIP,EAAKH,EAAcG,EAAIkB,EAASC,MAAS,GACzClB,EAAKJ,EAAcI,EAAIiB,EAASE,QAAW,GAE3CC,EAAUxB,EAAcG,EAAIkB,EAASC,MAAQ,GAC7CG,EAAUzB,EAAcI,EAAIiB,EAASE,OAAS,QAI9CpB,EAAI,IACJC,GAAI,EAGJoB,EAAU,GACVC,EAAU,GAMd3B,EAAI4B,QAAQC,SAASxB,EAAc,KAAVqB,EACzB1B,EAAI4B,QAAQC,SAASvB,EAAc,GAAVqB,EAEzB3B,EAAI4B,QAAQE,OAAOzB,EAAI,EAAGC,EAAI,KAAM,GAAG,KAI3Ce,EAAAA,EAAAA,IAASU,IAAgB,IAAf,MAAEC,GAAOD,EACrB/B,EAAI4B,QAAQC,SAASvB,EAAuC,IAAnC2B,KAAKC,IAAIF,EAAMG,kBACxCnC,EAAI4B,QAAQQ,SAASC,EAAuC,IAAnCJ,KAAKC,IAAIF,EAAMG,kBAA2B,EAAG,KAKlEG,EAAAA,EAAAA,KAAA,SAAOC,QAAS,KAAMC,MAAO,IAAKC,UAChCH,EAAAA,EAAAA,KAAA,WACMzC,EACJG,IAAKA,EACL0C,YAAU,EACVC,eAAa,EACbC,SAAU9C,EAAM+C,MAAMD,SACtBJ,MAAO,IAAIC,UAEXH,EAAAA,EAAAA,KAAA,qBACEQ,OAAO,WACPC,MAAM,UACNC,QAAS,EACTC,OAAQ1C,OAKlB,CAjFA2C,EAAAA,GAAKC,eAAeC,EAAAA,GAmFpBrD,EAAAA,EAAQsD,QAAQ,kC","sources":["Models/Esoteric/EsotericModel.js"],"sourcesContent":["import React, { useRef, useLayoutEffect, useState } from \"react\";\nimport { useGLTF, useCubeTexture } from \"@react-three/drei\";\nimport { useFrame } from \"react-three-fiber\";\nimport gsap from \"gsap\";\n\nimport ScrollTrigger from 'gsap/ScrollTrigger';\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function EsotericModel(props) {\n  const { nodes } = useGLTF(\"/Objects/Esoteric/esoteric.gltf\");\n  const ref = useRef();\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const texture = useCubeTexture([\n    'Objects/px.png', 'Objects/nx.png', 'Objects/py.png', 'Objects/ny.png', 'Objects/pz.png', 'Objects/nz.png'\n  ],{path:'/'});\n  \n  const hidden = props.isModelHidden;\n  const activeTileIndex = props.activeTileIndex;\n \n\n\n  useLayoutEffect(() => {\n    function handleMouseMove(event) {\n      const { clientX, clientY } = event;\n      setMousePosition({ x: clientX, y: clientY });\n    }\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n\n  useFrame(({ viewport }) => {\n    if(hidden && activeTileIndex === 0){\n      var x = (mousePosition.x / viewport.width) / 50;\n      var y = (mousePosition.y / viewport.height) / -10;\n\n      var xOffset = mousePosition.x / viewport.width - 0.5;\n      var yOffset = mousePosition.y / viewport.height - 0.5;\n    }else{\n\n\n      var x = 1 / 50;\n      var y = 1 - 10;\n\n      // Adjust the object's position based on mouse position\n      var xOffset = 1 - 0.5;\n      var yOffset = 1 - 0.5;\n    }\n\n\n      \n\n      ref.current.position.x = xOffset * 0.003;\n      ref.current.position.y = yOffset * 0.2;\n\n      ref.current.lookAt(x - 3, y - 15.5, 10);\n  \n  });\n\n  useFrame(({ clock }) => {\nref.current.position.y = Math.sin(clock.getElapsedTime()) * 0.08; \nref.current.rotation.z = Math.sin(clock.getElapsedTime()) * 0.05 - 0.1;\n  \n  });\n\n  return (\n    <group dispose={null} scale={0.56}>\n      <mesh\n        {...props}\n        ref={ref}\n        castShadow\n        receiveShadow\n        geometry={nodes.Curve.geometry}\n        scale={2.6}\n      >\n        <meshBasicMaterial\n          attach=\"material\"\n          color=\"#202A45\"\n          opacity={1}\n          envMap={texture}\n        />\n      </mesh>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/Objects/Esoteric/esoteric.gltf\");\n"],"names":["EsotericModel","props","nodes","useGLTF","ref","useRef","mousePosition","setMousePosition","useState","x","y","texture","useCubeTexture","path","hidden","isModelHidden","activeTileIndex","useLayoutEffect","handleMouseMove","event","clientX","clientY","document","addEventListener","removeEventListener","useFrame","_ref","viewport","width","height","xOffset","yOffset","current","position","lookAt","_ref2","clock","Math","sin","getElapsedTime","rotation","z","_jsx","dispose","scale","children","castShadow","receiveShadow","geometry","Curve","attach","color","opacity","envMap","gsap","registerPlugin","ScrollTrigger","preload"],"sourceRoot":""}