{"version":3,"file":"static/js/457.11e99dc8.chunk.js","mappings":"sMAQe,SAASA,EAAWC,GACjC,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,GAAQ,yBAEpBC,GAAMC,EAAAA,EAAAA,WACLC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CAAEC,EAAG,EAAGC,EAAG,IAExDC,GAAUC,EAAAA,EAAAA,GAAe,CAC7B,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC1F,CAACC,KAAK,MA2CR,OAvCFC,EAAAA,EAAAA,kBAAgB,KACd,SAASC,EAAgBC,GACvB,MAAM,QAAEC,EAAO,QAAEC,GAAYF,EAC7BT,EAAiB,CAAEE,EAAGQ,EAASP,EAAGQ,GACpC,CAIA,OAFAC,SAASC,iBAAiB,YAAaL,GAEhC,KACLI,SAASE,oBAAoB,YAAaN,EAAgB,CAC3D,GACA,KAEDO,EAAAA,EAAAA,IAASC,IAAmB,IAAlB,SAAEC,GAAUD,EACpB,IAAId,EAAKH,EAAcG,EAAIe,EAASC,MAAU,GAC1Cf,EAAKJ,EAAcI,EAAIc,EAASE,OAAU,GAG9C,MAAMC,EAAUrB,EAAcG,EAAIe,EAASC,MAAQ,GAC7CG,EAAUtB,EAAcI,EAAIc,EAASE,OAAS,GAEpDtB,EAAIyB,QAAQC,SAASrB,EAAc,KAAVkB,EAAkB,IAC3CvB,EAAIyB,QAAQC,SAASpB,EAAc,KAAVkB,EAEzBxB,EAAIyB,QAAQE,OAAOtB,EAAI,EAAGC,EAAI,KAAM,EAAE,KAIxCY,EAAAA,EAAAA,IAASU,IAAgB,IAAf,MAAEC,GAAOD,EACjB5B,EAAIyB,QAAQC,SAASpB,GAAwC,IAAnCwB,KAAKC,IAAIF,EAAMG,kBAA2B,GACpEhC,EAAIyB,QAAQQ,SAASC,EAAuC,KAAnCJ,KAAKC,IAAIF,EAAMG,kBAA4B,GAEpEhC,EAAIyB,QAAQC,SAASQ,EAAI,IACzBlC,EAAIyB,QAAQQ,SAAS5B,GAAK,GAC1BL,EAAIyB,QAAQQ,SAAS3B,EAAI,EAAG,KAM5B6B,EAAAA,EAAAA,KAAA,YAAWtC,EAAOuC,QAAS,KAAMC,MAAO,IAAKC,UAC3CH,EAAAA,EAAAA,KAAA,SAAOE,MAAO,KAAOrC,IAAKA,EAAIsC,UAC5BH,EAAAA,EAAAA,KAAA,SAAAG,UAGEC,EAAAA,EAAAA,MAAA,QACEC,YAAU,EACVC,eAAa,EACbC,SAAU5C,EAAM6C,QAAQD,SACxBE,SAAU9C,EAAM6C,QAAQC,SACxBlB,SAAU,CAAC,MAAO,OAAQ,GAAGY,SAAA,EAE7BH,EAAAA,EAAAA,KAAA,qBACEU,OAAO,WACPC,MAAM,UACNC,QAAS,EACTC,OAAQzC,KAEN4B,EAAAA,EAAAA,KAAA,OAAKU,OAAO,MAAMI,KAAM,CAAC,UAAW,GAAK,eASzD,CAjFAC,EAAAA,GAAKC,eAAeC,EAAAA,GAmFpBrD,EAAAA,EAAQsD,QAAQ,4B","sources":["Models/AMP/ampModel.js"],"sourcesContent":["import React, { useRef, useLayoutEffect, useState, useEffect } from \"react\";\nimport { useGLTF, useCubeTexture, useScroll } from \"@react-three/drei\";\nimport { useFrame } from \"react-three-fiber\";\nimport gsap from \"gsap\";\n\nimport ScrollTrigger from 'gsap/ScrollTrigger';\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function KazanModel(props) {\n  const { nodes } = useGLTF(\"/Objects/AMP/amp.gltf\");\n\n  const ref = useRef();\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  const texture = useCubeTexture([\n    'Objects/px.png', 'Objects/nx.png', 'Objects/py.png', 'Objects/ny.png', 'Objects/pz.png', 'Objects/nz.png'\n  ],{path:'/'});\n\n\n\nuseLayoutEffect(() => {\n  function handleMouseMove(event) {\n    const { clientX, clientY } = event;\n    setMousePosition({ x: clientX, y: clientY });\n  }\n\n  document.addEventListener(\"mousemove\", handleMouseMove);\n\n  return () => {\n    document.removeEventListener(\"mousemove\", handleMouseMove);\n  };\n}, []);\n\n  useFrame(({ viewport }) => {\n    var x = (mousePosition.x / viewport.width ) / 50\n    var y = (mousePosition.y / viewport.height) / 50\n\n    // Adjust the object's position based on mouse position\n    const xOffset = mousePosition.x / viewport.width - 0.5;\n    const yOffset = mousePosition.y / viewport.height - 0.5;\n\n    ref.current.position.x = xOffset * 0.002 - 1.6;\n    ref.current.position.y = yOffset * 0.001;\n\n    ref.current.lookAt(x - 3, y - 98.5, 8);\n\n  });\n  \n  useFrame(({ clock }) => {\n    ref.current.position.y += Math.sin(clock.getElapsedTime()) * 0.03 - 41; \n    ref.current.rotation.z = Math.sin(clock.getElapsedTime()) * 0.005 - 0.1; \n\n    ref.current.position.z = 1.2;\n    ref.current.rotation.x = -0.2;\n    ref.current.rotation.y = 0.2;\n  });\n\n\n  \n  return (\n    <group {...props} dispose={null} scale={0.58}>\n      <group scale={0.018} ref={ref}>\n        <group\n\n        >\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.Shape_0.geometry}\n            material={nodes.Shape_0.material}\n            position={[1.927, 35.231, 0]}\n          >\n            <meshBasicMaterial\n              attach=\"material\"\n              color=\"#202A45\"\n              opacity={1}\n              envMap={texture}\n            />\n                <fog attach=\"fog\" args={['#354970', 0.9 ,200 ]} />\n          </mesh>\n        </group>\n \n        \n      </group>\n  \n    </group>\n  );\n}\n\nuseGLTF.preload(\"/Objects/Kazan/kazan.gltf\");\n"],"names":["KazanModel","props","nodes","useGLTF","ref","useRef","mousePosition","setMousePosition","useState","x","y","texture","useCubeTexture","path","useLayoutEffect","handleMouseMove","event","clientX","clientY","document","addEventListener","removeEventListener","useFrame","_ref","viewport","width","height","xOffset","yOffset","current","position","lookAt","_ref2","clock","Math","sin","getElapsedTime","rotation","z","_jsx","dispose","scale","children","_jsxs","castShadow","receiveShadow","geometry","Shape_0","material","attach","color","opacity","envMap","args","gsap","registerPlugin","ScrollTrigger","preload"],"sourceRoot":""}